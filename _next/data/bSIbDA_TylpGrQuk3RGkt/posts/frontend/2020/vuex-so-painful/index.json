{"pageProps":{"post":{"title":"Vuex createNamespacedHelpers 사용법","date":"2020-02-05","slug":"frontend/2020/vuex-so-painful/index","content":"<p>Vuex에선 createNamespacedHelpers 객체를 제공한다.<br>\n이 store를 이용해 각 component에서 편하게 사용하기 위해 적용해봤다.<br>\n아직도 적응중이지만 각 components끼리 data, event 전달하는것만큼 머리를 싸맬 필요는 없어서 좋아보였다.</p>\n<p>만일 <code>import { createNamespacedHelpers } from \"vuex\";</code>를 이용하려면 먼저 store/index.js를 만들어야 한다.</p>\n<p><img src=\"./images/vuex_dir.PNG\" alt=\"vuex dir\"></p>\n<p>폴더 구조는 이런식으로 하고 아래는 index.js 내용이다.</p>\n<pre><code>import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport navigation from \"@/store/modules/navigation\";\nimport createLogger from \"vuex/dist/logger\";\n\nVue.use(Vuex);\n\nconst debug = process.env.NODE_ENV !== \"production\";\n\nexport default new Vuex.Store({\n  modules: {\n    navigation\n  },\n  strict: debug,\n  plugins: debug ? [createLogger()] : []\n});\n</code></pre>\n<p>이제 사용할 준비가 됬다. 아래는 AppHeader.vue 내용이다.</p>\n<pre><code>&#x3C;template>\n  &#x3C;v-app-bar app color=\"cyan\" dark>\n    &#x3C;!-- &#x3C;v-app-bar-nav-icon @click.stop=\"openDrawer = !openDrawer\" /> -->\n    &#x3C;v-app-bar-nav-icon @click.stop=\"clickDrawer\" />\n    &#x3C;v-toolbar-title>Daisy&#x3C;/v-toolbar-title>\n  &#x3C;/v-app-bar>\n&#x3C;/template>\n\n&#x3C;script>\nimport { createNamespacedHelpers } from \"vuex\";\n\nconst navigationHelper = createNamespacedHelpers(\"navigation\");\n\nexport default {\n  name: \"AppHeader\",\n  computed: {\n    // 1번\n    ...navigationHelper.mapState([\"openDrawer\"]) // 사용가능\n\n    // 2번\n    ...navigationHelper.mapState({ // vue devtools에서 error during evaluation 발생\n      openDrawer: state => state.navigation.openDrawer\n    })\n  },\n  methods: {\n    ...navigationHelper.mapActions([\"clickDrawer\"])\n  }\n};\n&#x3C;/script>\n</code></pre>\n<p>mapState에는 몇가지 형식이 있는거같은데 위에 처럼 사용해야한다. 뭔가 안되는 이유가 분명히 있을텐데 vue는 debugging이 참 어렵다.</p>\n<p>그리고 위에 @click이벤트가 지정된 곳에 주석된 부분은 다음과 같은 에러가 나서 store 이벤트로 변경했다.<br>\n<code>Computed property \"openDrawer” was assigned to but it has no setter</code></p>\n<p>vuex를 안쓰다가 적용해보려니 template안에서도 신경써야할게 생겨서 새롭다...</p>\n"}},"__N_SSG":true}