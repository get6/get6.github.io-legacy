{"pageProps":{"post":{"title":"MapStruct 에러 해결 두번째","date":"2020-08-07","slug":"backend/2020/mapstruct-guide-second/index","content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Contents</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n<p><a href=\"https://get6.github.io/2020/08/07/mapstruct-guide-first.html\">MapStruc 에러 해결 첫번째</a>를 보고 오시는 걸 추천드립니다.</p>\n<p>이런 상황도 있었습니다.</p>\n<p>표현 계층에서 Transaction이 끝난 객체를 변환하는 작업(toDTO)을 하는 도중에 에러가 났었습니다.<br>\n조회하지 않은 Entity 속 변수 중 하나가 JPA 에러가난 상황이었습니다.</p>\n<p>이 경우를 방지하기 위해선</p>\n<pre><code class=\"language-java\">public interface UserMapper {\n    ...부분생략\n  @BeforeMapping\n  default &#x3C;T> LinkedHashSet&#x3C;T> fixLazyLoadingSet(Collection&#x3C;?> c, @TargetType Class&#x3C;?> targetType) {\n    return PengHaUtils.wasInitialized(c) ? null : new LinkedHashSet&#x3C;>();\n  }\n\n  @BeforeMapping\n  default &#x3C;T> List&#x3C;T> fixLazyLoadingList(Collection&#x3C;?> c, @TargetType Class&#x3C;?> targetType) {\n    return PengHaUtils.wasInitialized(c) ? null : Collections.emptyList();\n  }\n}\n</code></pre>\n<p>위 함수에선 Util class에 있는 함수를 호출합니다.</p>\n<pre><code class=\"language-java\">  /**\n   * check JPA initialized for MapStruct\n   *\n   * @param c Target\n   * @return Was this collection initialized?  Or is its data still not (fully) loaded?\n   */\n  public static boolean wasInitialized(Object c) {\n    if (!(c instanceof PersistentCollection)) {\n      return true;\n    }\n    PersistentCollection pc = (PersistentCollection) c;\n    return pc.wasInitialized();\n  }\n</code></pre>\n<p>이런식으로 UserMapper에서 User 객체 속 Collection 객체들을 변환하기 전에 초기화를 해주는 작업이 들어가야 에러가 나지 않습니다.</p>\n<hr>\n<p>또 다른 상황은</p>\n<p>UserRoleMapper에 <code>List&#x3C;UserRoleDTO> toDTO(Collection&#x3C;UserRoleDTO> userRoleDTOs)</code>를 선언한 일이 있었습니다.<br>\n이렇게 User Entity를 기준으로 하위 {Entity}Mapper.class 마다 Collection 변환을 만들어 주면 상위 객체에서도 참조하는 상황이 생깁니다.</p>\n<p>이런 경우 User Entity에 있는 userRoles가 이 메소드를 활용하여 변환 되므로 JPA LazyException이 발생합니다.<br>\n위에 있는 BeforeMapping이 무시되고 해당 구현 함수를 참조하여 위 에러가 해결되지 않았습니다.<br>\n따라서 Collection DTO &#x3C;-> Entity 구현 함수는 상위 EntityMapper에 구현 하시길 바랍니다.</p>\n</body>\n</html>\n"}},"__N_SSG":true}