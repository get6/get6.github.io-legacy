{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/frontend/2020/flutter-state-management/","result":{"data":{"site":{"siteMetadata":{"title":"Jun Wick's Blog","author":{"name":"Sung Jun, Hwang"}}},"markdownRemark":{"id":"1fd48072-1c2a-566b-9fee-f9b7913c40cf","excerpt":"플러터 상태관리 개념을 정리하려고 한다. StatefulWidget은 상태관리를 하기위한 위젯이다. 나는 riverpod을 통해 상태관리를 하려고 공부 중이다. 아래 코드처럼 StatefultWidget을 작성한다. 상태관리 될 변수들을 선언하는 곳은 State를 extends…","html":"<p>플러터 상태관리 개념을 정리하려고 한다.</p>\n<p>StatefulWidget은 상태관리를 하기위한 위젯이다.</p>\n<p>나는 riverpod을 통해 상태관리를 하려고 공부 중이다.</p>\n<p>아래 코드처럼 StatefultWidget을 작성한다.<br>\n상태관리 될 변수들을 선언하는 곳은 State를 extends한 class에 적는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token metadata symbol\">@override</span>\n  _TestState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_TestState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_TestState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>Test<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  _index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 상태관리 될 변수</span>\n  <span class=\"token metadata symbol\">@override</span>\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>\n        child<span class=\"token punctuation\">:</span> <span class=\"token function\">FlatButton</span><span class=\"token punctuation\">(</span>\n            child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    _index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>상태 변환 호출 함수를 통해 변경된 부분을 새로 바꾼다.</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>상태변화를 관리하고 알려주는 Widget이나 package를 사용하면 StatefulWidget의 사용을 줄일 수 있어보인다.</p>\n<p>riverpod에는 HookWidget이 있어 StatefulWidget없이도 사용할 수 있나보다.</p>","tableOfContents":"","frontmatter":{"title":"플러터 상태관리 개념","date":"October 13, 2020","description":null,"image":null}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/frontend/2020/react-native-start/"},"frontmatter":{"title":"React Native 설치하기","date":"2020-12-19"}}},{"node":{"fields":{"slug":"/frontend/2020/gatsbyjs-blog/"},"frontmatter":{"title":"새롭게 단장한 블로그를 소개합니다!","date":"2020-12-10"}}},{"node":{"fields":{"slug":"/frontend/2020/macos-update-and-node-install-error/"},"frontmatter":{"title":"mac OS Update와 Node Updagrade 후 발생한 에러","date":"2020-11-09"}}},{"node":{"fields":{"slug":"/frontend/2020/flutter-analytics-ios/"},"frontmatter":{"title":"Flutter Run할 때 Firebase analytics 에러가 나는 경우","date":"2020-10-30"}}},{"node":{"fields":{"slug":"/frontend/2020/blog-with-gatsbyjs/"},"frontmatter":{"title":"Gatsby로 Github 블로그 만들어보자!","date":"2020-09-18"}}},{"node":{"fields":{"slug":"/frontend/2020/flutter-firebase-anroid/"},"frontmatter":{"title":"Flutter Firebase android 연동","date":"2020-08-10"}}},{"node":{"fields":{"slug":"/frontend/2020/flutter-firebase-ios/"},"frontmatter":{"title":"Flutter Firebase ios 연동","date":"2020-08-10"}}},{"node":{"fields":{"slug":"/frontend/2020/flutter-run-error-for-package/"},"frontmatter":{"title":"플러터 project 위치 변경 후 에러","date":"2020-07-31"}}},{"node":{"fields":{"slug":"/frontend/2020/flutter-ios-build-error/"},"frontmatter":{"title":"플러터 ios 빌드 에러시 해결","date":"2020-07-15"}}},{"node":{"fields":{"slug":"/frontend/2020/padac-flutter/"},"frontmatter":{"title":"Flutter 개념 잡기","date":"2020-06-08"}}},{"node":{"fields":{"slug":"/frontend/2020/vue-bind-style/"},"frontmatter":{"title":"vue style bind 적용이 안될 때","date":"2020-02-19"}}},{"node":{"fields":{"slug":"/frontend/2020/vue-convert-html/"},"frontmatter":{"title":"에디터로 저장된 문구 vue v-html 치환하기","date":"2020-02-13"}}},{"node":{"fields":{"slug":"/frontend/2020/vuex-so-painful/"},"frontmatter":{"title":"Vuex createNamespacedHelpers 사용법","date":"2020-02-05"}}},{"node":{"fields":{"slug":"/frontend/2020/android-image-name/"},"frontmatter":{"title":"안드로이드 drawable 폴더 이미지명","date":"2020-01-29"}}},{"node":{"fields":{"slug":"/frontend/2020/jekyll-serve-on-local/"},"frontmatter":{"title":"Github pages jekyll 생성 후 로컬에서 build하는 방법","date":"2020-01-04"}}},{"node":{"fields":{"slug":"/frontend/2019/vue-run-serve-error/"},"frontmatter":{"title":"vue npm run serve error가 발생했던 이유","date":"2019-12-23"}}},{"node":{"fields":{"slug":"/frontend/2019/multi-platform-android/"},"frontmatter":{"title":"Kotlin 멀티플랫폼 프로젝트 실행","date":"2019-12-20"}}},{"node":{"fields":{"slug":"/frontend/2019/vue-run-serve-build-error/"},"frontmatter":{"title":"vue run serve error 발생","date":"2019-12-18"}}}]}},"pageContext":{"slug":"/frontend/2020/flutter-state-management/","tag":"frontend","previous":{"fields":{"slug":"/frontend/2020/blog-with-gatsbyjs/"},"frontmatter":{"tags":["javascript","gatsby","frontend"]}},"next":{"fields":{"slug":"/frontend/2020/flutter-analytics-ios/"},"frontmatter":{"tags":["frontend","flutter","firebase","ios"]}}}},"staticQueryHashes":["1146911855","1973561601","3826269039"]}