{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/backend/2020/java-jpa/","result":{"data":{"site":{"siteMetadata":{"title":"Jun Wick's Blog","author":{"name":"Sung Jun, Hwang"}}},"markdownRemark":{"id":"ac9a56a7-d14a-5e34-b946-5748527e7fe5","excerpt":"자바 ORM 표준 JPA 프로그래밍을 읽으면서 정리할 예정입니다. 엔티티 매니저 팩토리 앤티티 매니저를 만드는 공장이다. EntityManagerFactory…","html":"<p>자바 ORM 표준 JPA 프로그래밍을 읽으면서 정리할 예정입니다.</p>\n<h3>엔티티 매니저 팩토리</h3>\n<p>앤티티 매니저를 만드는 공장이다. EntityManagerFactory는 객체 생성 비용이 크기 때문에 애플리케이션 전체에서 공유하도록 설계되어 있다.<br>\n여러 스레드가 동시에 접근해도 안전하므로 서로 다른 스레드 간에 공유해도 된다.\n이때, 커넥션풀도 만든다.</p>\n<h3>엔티티 매니저</h3>\n<p>엔티티를 저장, 수정, 삭제, 조회 등을 처리한다. 엔티티를 저장하는 가상의 데이터베이스로 생각해도 된다.<br>\n여러 스레드가 동시에 접근하면 동시성 문제가 발생하므로 스레드 간에 절대 공유하면 안 된다.<br>\n연결이 필요한 시점에 커넥션을 얻는다. ex) 트랙젝션을 시작할 때 획득</p>\n<h3>영속성 컨텍스트</h3>\n<p>해석하면 <b style=\"color:cyan;\">엔티티를 영구 저장하는 환경</b>이라는 뜻<br>\nem.persiste(account); 메소드는 엔티티 매니저를 사용해서 계정 엔티티를 영속성 컨텍스트에 저장한다.\n여러 엔티티 매니저가 같은 영속성 컨텍스트에 접근할 수 있다.</p>\n<ul>\n<li>\n<p>엔티티의 생명주기</p>\n<ol>\n<li>비영속(new/transient): 영속성 컨텍스트와 전혀 관계가 없는 상태</li>\n<li>영속(managed): 영속성 컨텍스트에 저장된 상태</li>\n<li>준영속(detached): 영속성 컨텍스트에 저장되었다가 분리된 상태</li>\n<li>삭제(removed): 삭제된 상태</li>\n</ol>\n</li>\n</ul>\n<h3>플러시</h3>\n<p>flush()는 영속성 컨텍스트의 변경 내용을 데이터베이스에 반영한다.</p>\n<ol>\n<li>직접 호출</li>\n<li>트랜잭션 커밋 시 플러시 자동 호출</li>\n<li>JPQL 쿼리 실행 시 플러시 자동 호출</li>\n</ol>\n<hr>\n<h2>매핑 어노테이션</h2>\n<ul>\n<li>객체와 테이블 매핑: @Entity, @Table</li>\n<li>기본 키 매핑: @Id</li>\n<li>필드와 컬럼 매핑: @Column</li>\n<li>연관관계 매핑: @ManyToOne, @JoinColumn … etc</li>\n</ul>\n<p><b style=\"color:cyan;\">@Entity</b></p>\n<p>JPA를 사용해 테이블과 매핑할 클래스에 필수로 붙여야 하고, annotation을 클래스 위에 선언해야 한다.</p>\n<p>주의사항</p>\n<ol>\n<li>인자를 받는 생성자를 구현한 경우 기본 생성자는 필수로 생성해야한다.</li>\n<li>final, enum, interface, inner 클래스에는 사용할 수 없다.</li>\n<li>저장할 필드에 final이 있으면 안 된다.</li>\n</ol>\n<p>엔티티 매니저가 이 Entity 클래스들을 관리한다.</p>\n<p><b style=\"color:cyan;\">@Table</b></p>\n<p>@Entity와 마찬가지로 클래스 위에 선언하며 매핑할 테이블명을 넣어주면 된다.</p>\n<p><b style=\"color:cyan;\">@Id</b></p>\n<p>테이블에서 사용할 PK를 지정하는 annotatin이다. 필드 또는 getter에 지정할 수 있다.<br>\n엔티티 클래스를 생성할 때 필수적으로 넣어줘야 한다.</p>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/backend/2020/java-jpa/#%EC%97%94%ED%8B%B0%ED%8B%B0-%EB%A7%A4%EB%8B%88%EC%A0%80-%ED%8C%A9%ED%86%A0%EB%A6%AC\">엔티티 매니저 팩토리</a></li>\n<li><a href=\"/backend/2020/java-jpa/#%EC%97%94%ED%8B%B0%ED%8B%B0-%EB%A7%A4%EB%8B%88%EC%A0%80\">엔티티 매니저</a></li>\n<li><a href=\"/backend/2020/java-jpa/#%EC%98%81%EC%86%8D%EC%84%B1-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\">영속성 컨텍스트</a></li>\n<li><a href=\"/backend/2020/java-jpa/#%ED%94%8C%EB%9F%AC%EC%8B%9C\">플러시</a></li>\n</ul>\n</li>\n<li><a href=\"/backend/2020/java-jpa/#%EB%A7%A4%ED%95%91-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">매핑 어노테이션</a></li>\n</ul>","frontmatter":{"title":"JPA 정리","date":"June 08, 2020","description":null,"image":null}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/methodology/2021/gof-design-patterns/"},"frontmatter":{"title":"GoF(Gang of Four) Design Patterns 정리","date":"2021-01-17"}}},{"node":{"fields":{"slug":"/backend/2021/nextauth-guide/"},"frontmatter":{"title":"Next.js로 Admin 만들기","date":"2021-01-16"}}},{"node":{"fields":{"slug":"/backend/2020/test-driven-development/"},"frontmatter":{"title":"TDD(TEST DRIVEN DEVELOPMENT)를 SPRING BOOT에 사용하기","date":"2020-12-01"}}},{"node":{"fields":{"slug":"/backend/2020/mapstruct-guide-first/"},"frontmatter":{"title":"MapStruct 에러 해결 첫번째","date":"2020-08-07"}}},{"node":{"fields":{"slug":"/backend/2020/mapstruct-guide-second/"},"frontmatter":{"title":"MapStruct 에러 해결 두번째","date":"2020-08-07"}}},{"node":{"fields":{"slug":"/backend/2020/spring-security-example1/"},"frontmatter":{"title":"스프링 시큐리티 구축 1","date":"2020-06-17"}}},{"node":{"fields":{"slug":"/backend/2020/spring-security/"},"frontmatter":{"title":"스프링 시큐리티 구축","date":"2020-06-13"}}},{"node":{"fields":{"slug":"/backend/2020/spring-msa-config/"},"frontmatter":{"title":"스프링 부트 MSA 프로젝트 - config 서버 구축","date":"2020-05-27"}}},{"node":{"fields":{"slug":"/backend/2020/spring-initializr-gradle-type/"},"frontmatter":{"title":"Spring Initializr Gradle Type 비교","date":"2020-03-24"}}},{"node":{"fields":{"slug":"/backend/2020/type-of-traffic/"},"frontmatter":{"title":"인바운드 트래픽과 아웃바운드 트래픽 설명","date":"2020-03-18"}}},{"node":{"fields":{"slug":"/backend/2020/gradle-summary/"},"frontmatter":{"title":"Gradle 정리","date":"2020-03-16"}}},{"node":{"fields":{"slug":"/backend/2020/nodejs-express-guid/"},"frontmatter":{"title":"Express 가이드","date":"2020-03-13"}}},{"node":{"fields":{"slug":"/backend/2020/backend-roadmap1/"},"frontmatter":{"title":"Backend Developer - How does the internet work?","date":"2020-03-10"}}},{"node":{"fields":{"slug":"/backend/2020/openbanking-test/"},"frontmatter":{"title":"OpenBanking test 적용","date":"2020-03-10"}}},{"node":{"fields":{"slug":"/backend/2020/python-dynamic-parameter/"},"frontmatter":{"title":"Python binds dynamic parameters","date":"2020-02-21"}}},{"node":{"fields":{"slug":"/backend/2020/mybatis-parameter/"},"frontmatter":{"title":"Mybatis parameter 조심해야할 점","date":"2020-02-13"}}},{"node":{"fields":{"slug":"/backend/2020/sql-problem-solving/"},"frontmatter":{"title":"SQL 가상으로 목록 만들기","date":"2020-02-10"}}},{"node":{"fields":{"slug":"/backend/2020/python-exec-example/"},"frontmatter":{"title":"파이썬 exec 함수 사용방법","date":"2020-01-30"}}},{"node":{"fields":{"slug":"/backend/2020/mariadb-rule/"},"frontmatter":{"title":"MariaDB 문자열 합치기","date":"2020-01-21"}}},{"node":{"fields":{"slug":"/backend/2020/vscode-java-clean/"},"frontmatter":{"title":"vscode에서 java clean하는 법","date":"2020-01-20"}}}]}},"pageContext":{"slug":"/backend/2020/java-jpa/","tag":"backend","previous":{"fields":{"slug":"/frontend/2020/padac-flutter/"},"frontmatter":{"tags":["frontend","flutter"]}},"next":{"fields":{"slug":"/backend/2020/spring-security/"},"frontmatter":{"tags":["backend","java","spring","spring-security"]}}}},"staticQueryHashes":["1146911855","1973561601","3826269039"]}