{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/esm/ArrowBack.js","webpack:///./node_modules/@material-ui/icons/esm/ArrowForward.js","webpack:///./src/components/organisms/bio.tsx","webpack:///./src/components/molecules/utterances.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./node_modules/@material-ui/core/esm/Divider/Divider.js"],"names":["createSvgIcon","d","Bio","data","useStaticQuery","site","siteMetadata","author","name","summary","fixed","avatar","childImageSharp","Grid","container","spacing","alignItems","item","to","alt","style","marginBottom","minWidth","borderRadius","imgStyle","Typography","variant","Utterances","commentBox","useRef","useLayoutEffect","utterances","document","createElement","attributes","src","repo","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","useStyles","makeStyles","root","padding","article","overflowX","date","float","nav","margin","width","display","flexWrap","listStyle","justifyContent","paddingTop","color","boxShadow","backgroundColor","BlogPostTemplate","pageContext","location","classes","post","markdownRemark","siteTitle","title","image","frontmatter","resize","previous","next","relativePosts","tableOfContents","shuffle","allMarkdownRemark","edges","slice","description","excerpt","pathname","Box","component","mb","label","emoji","Paper","elevation","className","itemScope","itemType","dangerouslySetInnerHTML","__html","html","itemProp","Divider","length","mt","items","fields","slug","rel","Fab","ArrowBack","Hidden","xsDown","ArrowForward","props","_props$absolute","absolute","_props$component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","other","vertical","height","border","flexShrink","palette","divider","position","bottom","left","inset","marginLeft","middle","marginRight","alignSelf"],"mappings":"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","file":"component---src-templates-blog-post-tsx-dcc24d8b1df925d3a1fe.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport Image, { FixedObject } from \"gatsby-image\"\nimport { Grid, Typography } from \"@material-ui/core\"\nimport { BioQuery, BioQuery_site_siteMetadata } from \"./__generated__/BioQuery\"\n\nconst Bio: React.FC = () => {\n  const data = useStaticQuery<BioQuery>(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  const { author }: BioQuery_site_siteMetadata = data.site!.siteMetadata!\n  const { name, summary } = author!\n  const fixed = data.avatar!.childImageSharp!.fixed! as FixedObject\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item>\n        <Link to={\"/about\"}>\n          <Image\n            fixed={fixed}\n            alt={name!}\n            style={{\n              marginBottom: 0,\n              minWidth: 50,\n              borderRadius: `100%`,\n            }}\n            imgStyle={{\n              borderRadius: `50%`,\n            }}\n          />\n        </Link>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"subtitle2\">\n          Written by <strong>{name}</strong>. {summary}\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Bio\n","import React, { useRef, useLayoutEffect } from \"react\"\n\nconst Utterances: React.FC = () => {\n  const src = \"https://utteranc.es/client.js\"\n  const repo = \"get6/get6.github.io\"\n  const commentBox = useRef<HTMLDivElement>(null)\n\n  // after rendering component\n  useLayoutEffect(() => {\n    const utterances = document.createElement(\"script\")\n    const attributes = {\n      src,\n      repo,\n      \"issue-term\": \"pathname\",\n      // label: \"comment\",\n      theme: \"preferred-color-scheme\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    }\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n    if (commentBox.current) {\n      commentBox.current.appendChild(utterances)\n    }\n  }, [])\n\n  return <div ref={commentBox} />\n}\n\nexport default Utterances\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport {\n  Box,\n  Divider,\n  Fab,\n  Grid,\n  Paper,\n  makeStyles,\n  Hidden,\n} from \"@material-ui/core\"\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/organisms/seo\"\nimport Bio from \"../components/organisms/bio\"\nimport Emoji from \"../components/atoms/emoji\"\nimport PostList from \"../components/organisms/post-list\"\nimport { shuffle } from \"../utils/common\"\nimport Utterances from \"../components/molecules/utterances\"\nimport { BlogPostTemplateQuery } from \"./__generated__/BlogPostTemplateQuery\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  article: {\n    overflowX: \"auto\",\n  },\n  date: {\n    float: \"right\",\n  },\n  nav: {\n    margin: 0,\n    width: \"auto\",\n    display: `flex`,\n    flexWrap: `wrap`,\n    listStyle: `none`,\n    alignItems: \"center\",\n    justifyContent: `space-between`,\n    paddingTop: theme.spacing(2),\n    \"& li h6\": {\n      color: \"inherit\",\n    },\n    \"& li > a\": {\n      color: \"inherit\",\n    },\n    \"& li > a > button\": {\n      color: \"inherit\",\n      boxShadow: \"none\",\n      backgroundColor: \"inherit\",\n    },\n  },\n}))\n\n/**\n * 들어가야 할 것\n * 목차 목록 (클릭 시 이동)\n * 연관글\n * 댓글\n * 스타일잡기\n */\ntype BlogPostTemplateProps = PageProps<BlogPostTemplateQuery>\nconst BlogPostTemplate: React.FC<BlogPostTemplateProps> = ({\n  data,\n  pageContext,\n  location,\n}) => {\n  const classes = useStyles()\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const image = post.frontmatter.image\n    ? post.frontmatter.image.childImageSharp.resize\n    : null\n  const { previous, next } = pageContext\n  // TODO: TOC 만들기\n  const tableOfContents = post.tableOfContents\n\n  const relativePosts = shuffle(data.allMarkdownRemark.edges).slice(0, 4)\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        image={image}\n        pathname={location.pathname}\n      />\n      <Box component=\"h1\" mb={0}>\n        <Emoji label=\"smile\" emoji={\"📇\"} /> {post.frontmatter.title}\n      </Box>\n      <Paper elevation={20} variant=\"outlined\" className={classes.root}>\n        <Grid\n          component=\"article\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n          className={classes.article}\n        >\n          <Box className={classes.date}>{post.frontmatter.date}</Box>\n          <Grid\n            item\n            component=\"section\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n        </Grid>\n        <Divider />\n        {0 < relativePosts.length && (\n          <Grid item>\n            <Box component=\"h3\" mt={1} mb={0}>\n              <Emoji label=\"smile\" emoji={\"🖥\"} /> 연관 글\n            </Box>\n            <Grid item>\n              <PostList items={relativePosts} />\n            </Grid>\n          </Grid>\n        )}\n\n        <Grid item component=\"nav\">\n          <Box component=\"ul\" className={classes.nav}>\n            <Box component=\"li\">\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  <Fab>\n                    <ArrowBack />\n                  </Fab>{\" \"}\n                  {previous.frontmatter.title}\n                </Link>\n              )}\n            </Box>\n            <Hidden xsDown>\n              <Box component=\"li\">\n                <Bio />\n              </Box>\n            </Hidden>\n            <Box component=\"li\">\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title}\n                  <Fab>\n                    {\" \"}\n                    <ArrowForward />\n                  </Fab>\n                </Link>\n              )}\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item>\n          <Utterances />\n        </Grid>\n      </Paper>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostTemplateQuery($slug: String!, $tag: String!) {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image: featured {\n          childImageSharp {\n            resize(width: 1200) {\n              src\n              height\n              width\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fields: { slug: { ne: $slug } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"],"sourceRoot":""}